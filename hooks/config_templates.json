{
  "description": "Configuration templates for MCP MITM Mem0 hooks integration with Claude Code",
  "templates": {
    "full_integration": {
      "description": "Complete hooks integration with memory search, storage, analysis, permission intelligence, error prevention, and project continuity",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "Bash|Edit|MultiEdit|Write|Read|Task",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ],
          "PostToolUse": [
            {
              "matcher": "Bash|Edit|MultiEdit|Write|Task",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_store.py"
                }
              ]
            }
          ],
          "PreResponse": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/pre_response_hook.py"
                }
              ]
            }
          ],
          "Stop": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_analyze.py"
                }
              ]
            }
          ],
          "Notification": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/permission_intelligence.py"
                },
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/project_continuity_hook.py"
                }
              ]
            }
          ]
        }
      }
    },
    "memory_search_only": {
      "description": "Only memory search - provides context before tool execution",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "Bash|Edit|MultiEdit|Write",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ]
        }
      }
    },
    "error_prevention": {
      "description": "Focus on preventing repeated errors with memory search for Bash commands",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "Bash",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ]
        }
      }
    },
    "learning_focused": {
      "description": "Emphasize learning capture with storage, analysis, and permission intelligence",
      "config": {
        "hooks": {
          "PostToolUse": [
            {
              "matcher": "Bash|Edit|MultiEdit|Write|Task",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_store.py"
                }
              ]
            }
          ],
          "Stop": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_analyze.py"
                }
              ]
            }
          ],
          "Notification": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/permission_intelligence.py"
                }
              ]
            }
          ]
        }
      }
    },
    "permission_intelligence": {
      "description": "Permission intelligence only - provides context for risky operations",
      "config": {
        "hooks": {
          "Notification": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/permission_intelligence.py"
                }
              ]
            }
          ]
        }
      }
    },
    "mcp_tools_integration": {
      "description": "Integration with all MCP tools including memory operations",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "mcp__.*",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ],
          "PostToolUse": [
            {
              "matcher": "mcp__.*",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_store.py"
                }
              ]
            }
          ]
        }
      }
    },
    "conservative": {
      "description": "Conservative setup - only analysis on session end",
      "config": {
        "hooks": {
          "Stop": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_analyze.py"
                }
              ]
            }
          ]
        }
      }
    },
    "advanced_error_prevention": {
      "description": "Advanced error prevention with pattern detection and proactive suggestions",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "Bash|Edit|Write",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ],
          "PreResponse": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/pre_response_hook.py"
                }
              ]
            }
          ],
          "PostToolUse": [
            {
              "matcher": "Bash",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_store.py"
                }
              ]
            }
          ]
        }
      }
    },
    "project_continuity": {
      "description": "Maintain project context across sessions with state tracking",
      "config": {
        "hooks": {
          "Notification": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/project_continuity_hook.py"
                }
              ]
            }
          ],
          "PostToolUse": [
            {
              "matcher": "Edit|Write|Task",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_store.py"
                }
              ]
            }
          ]
        }
      }
    },
    "intelligent_development": {
      "description": "Combined error prevention and project continuity for intelligent development",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "Bash|Edit|Write",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ],
          "PreResponse": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/pre_response_hook.py"
                }
              ]
            }
          ],
          "Notification": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/project_continuity_hook.py"
                }
              ]
            }
          ]
        }
      }
    },
    "enhanced_reflection": {
      "description": "Automatic reflection triggers with memory curation for improved learning",
      "config": {
        "hooks": {
          "PostToolUse": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/auto_reflection_hook.py"
                },
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_curation_hook.py"
                }
              ]
            }
          ],
          "PreResponse": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/auto_reflection_hook.py"
                }
              ]
            }
          ]
        }
      }
    },
    "ultimate_intelligence": {
      "description": "Complete intelligent memory system with all features enabled",
      "config": {
        "hooks": {
          "PreToolUse": [
            {
              "matcher": "Bash|Edit|MultiEdit|Write|Read|Task",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
                }
              ]
            }
          ],
          "PostToolUse": [
            {
              "matcher": "Bash|Edit|MultiEdit|Write|Task",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_store.py"
                },
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/auto_reflection_hook.py"
                },
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_curation_hook.py"
                }
              ]
            }
          ],
          "PreResponse": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/pre_response_hook.py"
                },
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/auto_reflection_hook.py"
                }
              ]
            }
          ],
          "Stop": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/memory_analyze.py"
                }
              ]
            }
          ],
          "Notification": [
            {
              "matcher": "",
              "hooks": [
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/permission_intelligence.py"
                },
                {
                  "type": "command",
                  "command": "cd /home/terry/Development/terrymunro/mcps/mcp-mitm-mem0 && uv run python hooks/project_continuity_hook.py"
                }
              ]
            }
          ]
        }
      }
    }
  },
  "installation_instructions": {
    "user_settings": {
      "description": "Add to ~/.claude/settings.json for all projects",
      "file_path": "~/.claude/settings.json",
      "merge_instructions": "Merge the 'hooks' section into your existing settings.json file"
    },
    "project_settings": {
      "description": "Add to .claude/settings.json for this project only",
      "file_path": ".claude/settings.json",
      "merge_instructions": "Create or update .claude/settings.json in your project root"
    },
    "local_settings": {
      "description": "Add to .claude/settings.local.json for local development",
      "file_path": ".claude/settings.local.json",
      "merge_instructions": "Create or update .claude/settings.local.json (not committed to git)"
    }
  },
  "customization_options": {
    "path_adjustment": {
      "description": "Update the 'cd' path in commands to match your installation location",
      "example": "cd /path/to/your/mcp-mitm-mem0 && uv run python hooks/memory_search.py"
    },
    "tool_matchers": {
      "description": "Customize which tools trigger hooks by modifying the 'matcher' field",
      "examples": {
        "all_file_operations": "Edit|MultiEdit|Write|Read",
        "bash_only": "Bash",
        "all_tools": "",
        "regex_pattern": "Edit|Write|mcp__.*"
      }
    },
    "hook_combinations": {
      "description": "Mix and match different hook types based on your needs",
      "recommendations": {
        "new_users": "Start with 'conservative' or 'memory_search_only'",
        "active_development": "Use 'full_integration' or 'learning_focused'",
        "error_prone_projects": "Use 'error_prevention' combined with 'learning_focused'"
      }
    }
  },
  "troubleshooting": {
    "common_issues": {
      "path_errors": {
        "description": "Hook scripts not found",
        "solution": "Verify the 'cd' path in hook commands matches your installation directory"
      },
      "permission_errors": {
        "description": "Permission denied when running hooks",
        "solution": "Ensure hook scripts are executable: chmod +x hooks/*.py"
      },
      "import_errors": {
        "description": "Python import errors in hook scripts",
        "solution": "Verify the mcp_mitm_mem0 package is properly installed and accessible"
      },
      "no_output": {
        "description": "Hooks running but no visible output",
        "solution": "Check ~/.claude/hook_execution.log for execution logs"
      }
    },
    "debugging": {
      "execution_logs": "Check ~/.claude/hook_execution.log for hook execution details",
      "error_logs": "Check ~/.claude/hook_errors.log for error details", 
      "transcript_mode": "Use Ctrl-R in Claude Code to see hook progress messages",
      "test_hooks": "Run hook scripts manually with test JSON input to verify functionality"
    }
  },
  "performance_considerations": {
    "execution_time": "Hooks should complete within 1-2 seconds to avoid delays",
    "memory_usage": "Memory operations are cached and optimized for speed",
    "frequency": "Consider reducing hook frequency for very active sessions",
    "selective_application": "Use specific tool matchers rather than applying to all tools"
  }
}